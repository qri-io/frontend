version: 2.1
orbs:
  gcp-gke: circleci/gcp-gke@1.1.0

commands:
  rolling-update-stateful-set:
    description: Update a deployment's Docker image.
    parameters:
      cluster:
        description: The Kubernetes cluster name.
        type: string
      container:
        description: The Kubernetes container name.
        type: string
      statefulset:
        description: The Kubernetes statefulset name.
        type: string
      dry-run:
        default: none
        description: >
          Must be "none", "server", or "client". If client strategy, only print the
          object that would be sent, without sending it. If server strategy, submit
          server-side request without persisting the resource.
        enum:
          - none
          - server
          - client
        type: enum
      image:
        description: A fully-qualified name for your docker image
        type: string
      namespace:
        default: ''
        description: The Kubernetes namespace name.
        type: string
      tag:
        default: latest
        description: Docker image tag
        type: string
    steps:
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: <<parameters.cluster>>
      - run:
          command: >
            DRY_RUN="<< parameters.dry-run >>"

            if [ -n "<<parameters.namespace>>" ]; then
              set -- "$@" --namespace="<<parameters.namespace>>"
            fi

            set -- "$@" "--dry-run=${DRY_RUN}"

            kubectl set image statefulset <<parameters.statefulset>>
            <<parameters.container>>=<<parameters.image>>:<<parameters.tag>> "$@"
          name: Roll out image

jobs:
  frontend-test:
    docker:
      - image: circleci/node:14.15

    working_directory: ~/repo

    steps:
    - checkout:
        path: ~/repo
    - run:
        name: Check for changes
        command: ~/repo/.circleci/exit_if_path_not_changed.sh ~/repo
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
    - run:
        name: Install Dependencies
        command: yarn install
    - save_cache:
        paths:
          - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    # compile typescript
    - run:
        name: Compile Typescript
        command: yarn build
    # run tests!
    - run:
        name: Run Test Suite
        command: yarn test

  frontend-image-push:
    docker:
      - image: google/cloud-sdk

    working_directory: /root/project

    steps:
    - checkout:
        path: /root/project
    - run:
        name: Install node
        command: curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install -y nodejs build-essential
      # allows docker commands
    - setup_remote_docker
    - run:
        name: Build docker image
        command: docker build --rm=false -t gcr.io/qri-io/qrimatic-fe:$CIRCLE_SHA1 .
    - run:
        name: Push image to Google Container Registry, add 'latest' tag
        command: .circleci/publish_to_gcr.sh gcr.io/qri-io/qrimatic-fe $CIRCLE_SHA1
  
  frontend-prod-deploy:
    machine: true
    steps:
      - checkout
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: qri-cloud-prod-cluster
          install-kubectl: true
          perform-login: true
      - gcp-gke/rollout-image:
          namespace: qrimatic
          cluster: qri-cloud-prod-cluster
          deployment: qm-prod-qrimatic-fe
          container: qrimatic-fe
          image: gcr.io/qri-io/qrimatic-fe
          tag: $CIRCLE_SHA1

workflows:
  frontend:
    jobs:
      # - frontend-test
      - frontend-image-push:
          # requires:
          #   - frontend-test
          filters:
            branches:
              only:
                - master
      - frontend-prod-deploy:
          requires:
            - frontend-image-push
          filters:
            branches:
              only:
                - master